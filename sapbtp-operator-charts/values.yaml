# Default values for sapbtp-operator-charts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

manager:
  memory_limit: 200Mi
  cpu_limit: 250m
  req_memory_limit: 20Mi
  req_cpu_limit: 100m
  allow_cluster_access: true
  allowed_namespaces: []
  replica_count: 2
  enable_leader_election: true
  management_namespace:
  image:
    repository: ghcr.io/sap/sap-btp-service-operator/controller
    tag: master
    sha: ""
  secret:
    b64encoded: false
    enabled: true
    tls:
      crt: ""
      key: ""
    clientid: ""
    clientsecret: ""
    sm_url: ""
    tokenurl: ""
    tokenurlsuffix: "/oauth/token"
  rbacProxy:
    image:
      repository: quay.io/brancz/kube-rbac-proxy
      sha: ""
      tag: v0.15.0
    memory_limit: ""
    cpu_limit: ""
    req_memory_limit: ""
    req_cpu_limit: ""
  imagePullSecrets: []
  #   - name: registrySecretName
  pullSecretTemplate:
  # creates a secret to be used in imagePullSecrets from a template
  # output of data will be in form {"auths":{"myhost":{"auth":<encoded username:password>},"myhost1":{"auth":<encoded username:password>}}}
  #    name: registrySecretName
  #    authentication:
  #      - password: mypwd
  #        username: myuser
  #        host: myhost
  #      - password: mypwd1
  #        username: myuser1
  #        host: myhost1
  certificates:
    # Configure if https://github.com/jetstack/cert-manager is used
    certManager: true
    # Configure if self-generated, self-signed certificates are used
    # selfSigned: {}
    # selfSigned:
      # caBundle: "" # must be base64 encoded

      # server-cert.pem
      # crt: "" # must be base64 encoded

      # server-key.pem
      # key: "" # must be base64 encoded

    # Configure if https://github.com/gardener/cert-management is used
    # gardenerCertManager: {}
    # gardenerCertManager:
    ## set to use own issuer
    # issuer:

    ## setup to create issuer with own CA. This requires a caBUndle (ca-cert and ca-key)
    # caBundle: "" # must be base64 encoded

    ## ca-cert.pem
    # crt: "" # must be base64 encoded

    ## ca-key.pem
    # key: "" # must be base64 encoded
  # Example of adding security context
  #securityContext:
  #   runAsNonRoot: true
  securityContext: {}
  health_service:
    enabled: false
  kubernetesMatchLabels:
    enabled: false
cluster:
  id:
externalImages:
  kubectl:
    image:
      repository: bitnami/kubectl
      sha: ""
      tag: latest
